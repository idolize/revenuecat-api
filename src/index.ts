import createClient, { ClientOptions } from "openapi-fetch";
import type { paths } from "./__generated/revenuecat-api-v2"; // generated by openapi-typescript
import { rateLimitMiddleware } from "./rateLimitMiddleware";

export * from "./__generated/revenuecat-api-v2";

export type CreateRevenueCatClientOptions = ClientOptions & {
  automaticRateLimit?: boolean;
};

const defaultOptions: CreateRevenueCatClientOptions = {
  baseUrl: "https://api.revenuecat.com/v2",
  automaticRateLimit: true,
};

export async function createRevenueCatClient(
  accessToken: string,
  {
    automaticRateLimit,
    ...options
  }: CreateRevenueCatClientOptions = defaultOptions
) {
  if (!accessToken) {
    // For non-TS users, we'll throw an error if the accessToken is not provided
    throw new Error("accessToken is required");
  }

  const client = createClient<paths>({
    ...options,
    headers: {
      ...options.headers,
      Authorization: `Bearer ${accessToken}`,
    },
  });

  if (automaticRateLimit) {
    // https://openapi-ts.dev/openapi-fetch/middleware-auth
    client.use(rateLimitMiddleware);
  }

  return client;
}
